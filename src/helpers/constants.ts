// the numeric form of the payload1 passed into the primitive
// corresponds to the openssh signature produced by the following command:
// echo "E PLURIBUS UNUM; DO NOT SHARE" | ssh-keygen -Y sign -n double-blind.xyz -f ~/.ssh/id_rsa | pbcopy
export const MAGIC_DOUBLE_BLIND_BASE_MESSAGE =
  14447023197094784173331616578829287000074783130802912942914027114823662617007553911501158244718575362051758829289159984830457466395841150324770159971462582912755545324694933673046215187947905307019469n;
// Length in bits
export const MAGIC_DOUBLE_BLIND_BASE_MESSAGE_LEN = 672;

export const AAYUSH_EMAIL_SIG =
  15207359411750367246314820710722037812328660215950558373325624788073055797308251533888803272743492912448516221840758122571216635413057805715256315610228653005115383485651252693580423904236693627483409633929156619481251088961736590056524876041799317569594872319291586382552420783144075841450579335267932223391290347134634540056548581057613751446179473595721214304719997115676307378248907311159303560633207341686789605201226632074919802364355918427534722768180047545831155117936169169117602553190348279500921070123370666988216113747439681402942832631206963620848342101823496651487747399029518092711699844682156105281408n;
export const AAYUSH_EMAIL_MODULUS =
  21382155743666359510153181727284034494410102518870753963002717552809004033538696385654789895632150329764487849580696120492575876173906371558107323419325202113904864813053233864725071968116278965533327298514893424348893195554115884751394298871059298994857033960908497087156778704642515280462100330308706729236952603839954839738130309080106366592817960939525115062593937190734193362971823569276389665408955991019700267276741453625274411477855234859244191466305215683912807215583348938393909486734326911329866382810382808573811705103132112733186425332397882235141305096353013058839662035844877768356403735781445310497203n;
export const AAYUSH_EMAIL_E = 65537;
export const AAYUSH_PREHASH_MESSAGE_INT =
  306370674787114365633781112773469228059009793027966471851466120767846656998020297329725315257816313321119080183650179827321066820509171444865380608623222346215353998016645399566760300718179906952549598479536932347527085502623912968127920130795969488727700108753031764294047648097846095274362288718655602059561187374797332883004630266374200795864387450917509194747212176615881853985697579514754782772955019744292397389511788134444549380791948819456091762994070129178581994023114926496721838077919047089069141672952191163871809332205842305985366256243007810048900844944959599971350687490918375009877243600316752454006230695239105642662358269940512682464089400423376966762685937230216210594184317593750141875501315509348700922292196393056983976633064035418221996610386344049317920165989433291310083936155298055552965085495654908481745540148650557n;
export const AAYUSH_PREHASH_MESSAGE_HEX =
  "66726f6d3a416179757368204775707461203c61617975736867406d69742e6564753e0d0a646174653a5765642c203230204a756c20323032322032333a35353a3036202d303430300d0a7375626a6563743a6465737065726174656c7920747279696e6720746f206d616b6520697420746f20636861696e0d0a746f3a2262697377616a697473616d707269746940676d61696c2e636f6d22203c62697377616a697473616d707269746940676d61696c2e636f6d3e0d0a646b696d2d7369676e61747572653a763d313b20613d7273612d7368613235363b20633d72656c617865642f72656c617865643b20643d6d69742e6564753b20733d6f7574676f696e673b20743d313635383337353731393b2062683d572b2f5a476442316433495538784636434150627034436944394b63655553786757696678584166462b773d3b20683d46726f6d3a446174653a5375626a6563743a546f3b20623d";
export const AAYUSH_PREHASH_MESSAGE_STRING =
  'from:Aayush Gupta <aayushg@mit.edu>\r\ndate:Wed, 20 Jul 2022 23:55:06 -0400\r\nsubject:desperately trying to make it to chain\r\nto:"biswajitsampriti@gmail.com" <biswajitsampriti@gmail.com>\r\ndkim-signature:v=1; a=rsa-sha256; c=relaxed/relaxed; d=mit.edu; s=outgoing; t=1658375719; bh=W+/ZGdB1d3IU8xF6CAPbp4CiD9KceUSxgWifxXAfF+w=; h=From:Date:Subject:To; b=';
export const AAYUSH_POSTHASH_MESSAGE_PADDED_INT =

  986236757547332986472011617696226561292849812918563355472727826767720188564083584387121625107510786855734801053524719833194566624465665316622563244215340671405971599343902468620306327831715457360719532421388780770165778156818229863337344187575566725786793391480600129482653072861971002459947277805295727097226389568776499707662505334062639449916265137796823793276300221537201727072401742985542559596685092673521228140822200236743113743661549252453726123450722876929538747702356573783116197523966334991563351853851212597377279504828784762734599371237211990627231034886284149535755453896119419360864301824373851823n;

export const CIRCOM_FIELD_MODULUS = 21888242871839275222246405745257275088548364400416034343698204186575808495617n;
export const MAX_HEADER_PADDED_BYTES = 1024; // NOTE: this must be the same as the first arg in the email in main args circom
export const MAX_BODY_PADDED_BYTES = 1024; // NOTE: this must be the same as the first arg in the email in main args circom

// circom constants from main.circom / https://zkrepl.dev/?gist=30d21c7a7285b1b14f608325f172417b
// template RSAGroupSigVerify(n, k, levels) {
// component main { public [ modulus ] } = RSAVerify(121, 17);
// component main { public [ root, payload1 ] } = RSAGroupSigVerify(121, 17, 30);
export const CIRCOM_BIGINT_N = 121;
export const CIRCOM_BIGINT_K = 17;
export const CIRCOM_LEVELS = 30;
